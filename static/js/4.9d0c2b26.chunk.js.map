{"version":3,"sources":["../node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js","../node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","components/dialogs/dialogItem/DialogItem.jsx","components/dialogs/AddMessageForm.jsx","components/dialogs/Dialogs.jsx","components/dialogs/DialogsContainer.jsx"],"names":["ListItemAvatar","React","props","ref","classes","className","other","_objectWithoutProperties","context","ListContext","_extends","clsx","root","alignItems","alignItemsFlexStart","withStyles","minWidth","flexShrink","marginTop","name","ListItemText","children","_props$disableTypogra","disableTypography","_props$inset","inset","primaryProp","primary","primaryTypographyProps","secondaryProp","secondary","secondaryTypographyProps","dense","type","Typography","variant","component","display","color","multiline","flex","marginBottom","paddingLeft","DialogItem","labelId","ListItem","key","id","button","Avatar","alt","src","photo","renderTextField","label","input","meta","touched","invalid","error","custom","TextField","placeholder","helperText","maxLength10","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","noValidate","autoComplete","Field","rows","validate","required","style","Button","useStyles","makeStyles","theme","flexGrow","margin","spacing","width","palette","text","paper","padding","textAlign","typography","maxWidth","Dialogs","dialogsElements","dialogs","map","item","messagesElements","messages","message","Grid","container","xs","sm","Paper","List","paddingBottom","value","addNewMessage","addNewTextMessage","compose","connect","state","dialogsPage","dispatch","newText","sendMessageCreator","withAuthRedirect"],"mappings":"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","file":"static/js/4.9d0c2b26.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    flexShrink: 0\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n};\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nvar ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component â€“ normally `Avatar`.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children will be indented.\n   * This should be used if there is no left avatar or left icon.\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { ListItem, ListItemAvatar, ListItemText } from \"@material-ui/core\";\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    const labelId = `checkbox-list-secondary-label-${props.name}`;\r\n\r\n    return ( \r\n     \r\n       <ListItem key={props.id} button>\r\n        <ListItemAvatar>\r\n          <Avatar\r\n            alt={`Avatar nÂ°${props.name}`}\r\n            src={`https://source.unsplash.com/collection/${props.photo}/800x600`}\r\n          />\r\n        </ListItemAvatar>\r\n        <ListItemText id={labelId} primary={props.name} />\r\n                  </ListItem> \r\n                  );\r\n}\r\n \r\nexport default DialogItem;","import React from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\n\r\nconst renderTextField = ({\r\n    label,\r\n    input,\r\n    meta: { touched, invalid, error },\r\n    ...custom\r\n  }) => (\r\n    <TextField\r\n      label={label}\r\n      placeholder={label}\r\n      error={touched && invalid}\r\n      helperText={touched && error}\r\n      {...input}\r\n      {...custom}\r\n    />\r\n  )\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nconst AddMessageForm = (props) => {\r\n\r\n    return ( \r\n        <form onSubmit={props.handleSubmit} noValidate autoComplete=\"off\" >\r\n         <Field\r\n         component={renderTextField}\r\n           id=\"my-message\"\r\n           label=\"My message\"\r\n           variant=\"outlined\"\r\n           multiline\r\n           rows={5}\r\n          name=\"addNewTextMessage\"\r\n          validate={[required, maxLength10]}\r\n          \r\n         />\r\n           <div style={{marginTop: \"1vh\"}} >\r\n     <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\r\n        send\r\n      </Button>\r\n      </div>\r\n\r\n      \r\n       </form>\r\n     );\r\n}\r\n \r\nexport default reduxForm({form: \"addMessage\"})(AddMessageForm);","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { List } from \"@material-ui/core\";\r\nimport DialogItem from \"./dialogItem/DialogItem\";\r\nimport AddMessageForm from \"./AddMessageForm\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n      width: \"33vw\",\r\n    },\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  typography: {\r\n    width: \"100%\",\r\n    maxWidth: 500,\r\n  },\r\n}));\r\n\r\nconst Dialogs = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const dialogsElements = props.dialogs.map((item) => (\r\n    <DialogItem\r\n      key={item.key}\r\n      name={item.name}\r\n      id={item.id}\r\n      photo={item.photo}\r\n    />\r\n  ));\r\n\r\n  const messagesElements = props.messages.map((item) => (\r\n    <Typography key={item.id} className={classes.typography}>\r\n      {item.message}\r\n    </Typography>\r\n  ));\r\n\r\n \r\n\r\n  return (\r\n    <div className={classes.root} style={{ marginTop: \"60px\" }}>\r\n      <Grid container spacing={2} style={{ margin: \"auto\" }}>\r\n        <Grid item xs={12} sm={4}>\r\n          <Paper className={classes.paper}>\r\n            <List dense className={classes.root}>\r\n              {dialogsElements}\r\n            </List>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={8}>\r\n          <Paper\r\n            className={classes.root}\r\n            style={{ paddingBottom: \"3vh\", paddingLeft: \"1vw\" }}\r\n          >\r\n            {messagesElements}\r\n\r\n            <AddMessageForm onSubmit={(value) => {props.addNewMessage(value.addNewTextMessage)}} />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import {sendMessageCreator} from '../../redux/dialogs-reducer'\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport withAuthRedirect from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n return {\r\n    messages: state.dialogsPage.messages,\r\n    dialogs: state.dialogsPage.dialogs,\r\n  \r\n  }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n return {\r\n  addNewMessage: (newText) => {\r\n    dispatch(sendMessageCreator(newText));\r\n  }\r\n    }\r\n  }\r\n\r\n\r\n export default compose(\r\n   connect(mapStateToProps, mapDispatchToProps),\r\n   withAuthRedirect\r\n   )\r\n   (Dialogs);"],"sourceRoot":""}